This readme is intended for plume-lib developers.
The main plume-lib documentation is in file README.html .


--Making a release--

To make a plume-lib release and upload it to GitHub:

1. Commit or stash any changes in your copy of the plume-lib repository.

2. For each .jar file in java/lib/, if a more recent version is available,
replace the out-of-date one.  Update file names in files java/.classpath and
(in 2 places) java/Makefile .  For checker-qual.jar, update java/lib/README .

3. Browse to each URL in bin/checklink-args.txt and remove any
that are not valid.
Something like this could work (to avoid doing all of the URLs in one go,
which might overpower your browser):
  (defun browse-url-checklink (number-prefix)
    (find-file "bin/checklink-args.txt")
    (goto-char (point-min))
    (browse-url-once-if-matched (concat number-prefix ":\\(http.*\\)") 1))
  (browse-url-checklink "0")
  (browse-url-checklink "1")
  (browse-url-checklink "2")
  (browse-url-checklink "3")
  (browse-url-checklink "4")
  (browse-url-checklink "5")
  (browse-url-checklink "6")
  (browse-url-checklink "[^0-6]")

4. Ensure that the main documentation at index.html in the gh-pages branch
documents any new files.  To find new files, do

    git diff --name-status v`cat VERSION` | grep '^A'

5. Update changelog.txt and then VERSION.
To help writing the changelog text, run a command such as:

    git log --name-status v`cat VERSION`..HEAD

to view the changes since the last release, or something like

    git diff v`cat VERSION`..HEAD

to see the changes.

6. Commit and push the changes in your copy of the plume-lib repository.

    git push

7. Wait about 2.5 hours and ensure that Travis and Jenkins jobs pass:
at least plume-lib, plume-lib-typecheck, daikon, and daikon-typecheck.
The following commands will open the URLs in your browser.

    xdg-open https://travis-ci.org/mernst/plume-lib
    xdg-open https://travis-ci.org/typetools/plume-lib-typecheck
    xdg-open https://travis-ci.org/codespecs/daikon
    xdg-open https://travis-ci.org/typetools/daikon-typecheck-nullness
    xdg-open https://travis-ci.org/typetools/daikon-typecheck-regex
    xdg-open https://travis-ci.org/typetools/daikon-typecheck-signature
    xdg-open https://travis-ci.org/typetools/daikon-typecheck-interning
    xdg-open https://travis-ci.org/typetools/daikon-typecheck-formatter
    xdg-open http://tern.cs.washington.edu:8080/job/plume-lib/
    xdg-open http://tern.cs.washington.edu:8080/job/daikon/
    xdg-open http://tern.cs.washington.edu:8080/job/daikon-typecheck/
    xdg-open http://tern.cs.washington.edu:8080/job/plume-lib-typecheck/

8. Run the make-plume-release script located in bin:

    export JAVAC=$CHECKERFRAMEWORK/checker/bin-devel/javac
    bin/make-plume-release `cat VERSION`

The script requires that $JAVAC or 'javac' point to the JSR 308 compiler.
If this is the case, then the release is built and the test cases are run.  The
release should be Java 5 compatible.

9. Push the new Git tag created by the script to the repository:

    git push --tags

10. Make a new release on GitHub.
The exact steps are displayed at the end of the make-plume-release script. They
are repeated below, but you must replace x.y.z with the correct version number.
 * browse to https://github.com/mernst/plume-lib/releases/new
 * set tag to vx.y.z
 * Name is: plume-lib version x.y.z
 * description from changelog.txt, with line breaks fixed
 * attach plume-lib-x.y.z.tar.gz

11. Update the web version of the Javadoc.  On a machine connected to the UW
CSE file system:

    cd plume-lib/java
    git pull
    make javadoc-publish

This step can be done even without making a new release.
